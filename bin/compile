#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

function say() {
    echo $* | sed -u 's/^/       /'
  }

function step() {
    echo -----\> $*
}

BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

DEFAULT_SWIFT_VERSION="3.0"
CLANG_VERSION=3.7.0
SWIFT_BUILD_CONFIGURATION="release"

if [ -f "ENV_DIR/SWIFT_BUILD_CONFIGURATION" ]; then
  SWIFT_BUILD_CONFIGURATION=`cat "$ENV_DIR/SWIFT_BUILD_CONFIGURATION"`
fi

step Make cache dir
mkdir -p "$CACHE_DIR"
say Ok

step Utils
source "$BIN_DIR/utils"
say Ok
step Swiftenv
source "$BIN_DIR/steps/swiftenv"
say Ok
step Swift
source "$BIN_DIR/steps/swift"
say Ok
step Clang
source "$BIN_DIR/steps/clang"
say Ok
step UUID
source "$BIN_DIR/steps/uuid"
say Ok
step Pre_Compile
source "$BIN_DIR/steps/hooks/pre_compile"
say Ok
step Swift-Build
source "$BIN_DIR/steps/swift-build"
say Ok
step Swift-Install
source "$BIN_DIR/steps/swift-install"
say Ok

step Setup application environment
# Setup application environment
mkdir -p $BUILD_DIR/.profile.d
say Ok

step Set-env PATH
set-env PATH '$HOME/.swift-bin:$PATH'
say Ok
step Set-env LD
set-env LD_LIBRARY_PATH '$HOME/.swift-lib'

say Ok
step Post_Compile
source "$BIN_DIR/steps/hooks/post_compile"
say Ok
